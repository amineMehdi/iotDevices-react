import React from "react";
import Select from "react-select";
import "../style/FormIoT.css";
class FromIoT extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      name: "",
      number: "",
      description: "",
      type: "other",
      functionTime: 1,
      temperature: 20,
      online: "on",
    };
    this.initState = { ...this.state };
    this.handleSubmit = this.handleSubmit.bind(this);
  }
  handleSubmit(event) {
    console.log(this.state);
    event.preventDefault();
    this.setState({
      ...this.initState,
      value: null,
    });
  }
  handleChange(event, meta = null) {
    if (meta) {
      this.setState({
        [meta.name]: event.value,
      });
    } else {
      this.setState({
        [event.target.name]: event.target.value,
      });
    }
  }
  closeForm(event) {
    event.preventDefault();
    console.log("m");
  }
  render() {
    const tempOptions = Array(9)
      .fill(0)
      .map((_, index) => {
        return index
          ? { value: index * 5, label: `${index * 5} °C` }
          : { value: 1, label: "1 °C" };
      });
    const functionOptions = Array(7)
      .fill(0)
      .map((_, index) => {
        return index
          ? { value: index * 5, label: `${index * 5} minutes` }
          : { value: 1, label: "One minute" };
      });
    const typeOptions = [
      { value: "LPWANs", label: "Low Power Wide Area Networks" },
      { value: "Ceullular", label: "3G/4G/5G" },
      { value: "Zigbee", label: "Zigbee and Other Mesh Protocols" },
      { value: "Bluetooth", label: "Bluetooth and BLE" },
      { value: "Wifi", label: "Wi-Fi" },
      { value: "Rfid", label: "RFID" },
      { value: "other", label: "Other" },
    ];
    return (
      <div className="form-container">
        <form>
          <div className="close-btn">
            <button onClick={(event) => this.closeForm(event)}>X</button>
          </div>
          <label>
            <span>Name:</span>
            <input
              className="input-form"
              name="name"
              type="text"
              value={this.state.name}
              onChange={(event) => this.handleChange(event)}
            />
          </label>
          <br />
          <label>
            <span>Number:</span>
            <input
              className="input-form"
              name="number"
              type="number"
              value={this.state.number}
              onChange={(event) => this.handleChange(event)}
              placeholder="Number generated by default"
            />
          </label>
          <br />
          <label>
            <span>Type:</span>
            <Select
              name="type"
              value={this.state.value}
              options={typeOptions}
              onChange={(event, name) => this.handleChange(event, name)}
              placeholder="Other by default"
            />
          </label>
          <br />
          <label>
            <span>Temperature:</span>
            <Select
              name="temperature"
              value={this.state.value}
              options={tempOptions}
              onChange={(event, name) => this.handleChange(event, name)}
              placeholder="20°C by default"
            />
          </label>
          <br />
          <label>
            <span>Functioning Time :</span>
            <Select
              name="functionTime"
              value={this.state.value}
              options={functionOptions}
              onChange={(event, name) => this.handleChange(event, name)}
              placeholder="One minute by default"
            />
          </label>
          <br />
          <label>
            <span>State :</span>
            <Select
              name="online"
              value={this.state.value}
              options={[
                { label: "On", value: "on" },
                { label: "Off", value: "off" },
              ]}
              onChange={(event, name) => this.handleChange(event, name)}
              placeholder="Select a state"
            />
          </label>
          <br />
          <label>
            <span>Description:</span>
            <textarea
              name="description"
              value={this.state.description}
              onChange={(event) => this.handleChange(event)}
            />
          </label>
          <br />
          <div className="btn-container">
            <button
              type="submit"
              value="Submit"
              className="btn-submit"
              onClick={this.handleSubmit}
            >
              Submit
            </button>
          </div>
        </form>
      </div>
    );
  }
}

export default FromIoT;
